cmake_minimum_required(VERSION 3.20)
project(AirlineDatabaseManagement)

set(CMAKE_CXX_STANDARD 14)

add_subdirectory(lib/googletest-master)
include_directories(lib/googletest-master/googletest/include)
include_directories(lib/googletest-master/googlemock/include)

add_executable(AirlineDatabaseManagement main.cpp Tests/tests.cpp Tests/Aviao.h Tests/Aviao.cpp Tests/Voo.h Tests/Voo.cpp
        Tests/Servico.h Tests/Servico.cpp Tests/Passageiro.h Tests/Passageiro.cpp Tests/Bilhete.h Tests/Bilhete.cpp
        Tests/Aeroporto.h Tests/Aeroporto.cpp Tests/Funcionario.cpp Tests/Funcionario.h Tests/Bagagem.cpp Tests/Bagagem.h
        Tests/CompanhiaAerea.cpp Tests/CompanhiaAerea.h Tests/TransportadorDeBagagem.cpp Tests/TransportadorDeBagagem.h
        Tests/Data.h Tests/Data.cpp Tests/Horario.cpp Tests/Horario.h Tests/LocalDeTransporte.cpp Tests/LocalDeTransporte.h
        Tests/bst.h Tests/ExcessoPeso.cpp Tests/ExcessoPeso.h Tests/menu.cpp Tests/menu.h)

target_link_libraries(AirlineDatabaseManagement gtest gtest_main)

# Doxygen Build
find_package(Doxygen)
if(DOXYGEN_FOUND)
    set(BUILD_DOC_DIR "${CMAKE_SOURCE_DIR}/docs/output")
    if(NOT EXISTS "${BUILD_DOC_DIR}")
        file(MAKE_DIRECTORY "${BUILD_DOC_DIR}")
    endif()
    set(DOXYGEN_IN "${CMAKE_CURRENT_SOURCE_DIR}/docs/Doxyfile.txt")
    set(DOXYGEN_OUT "${CMAKE_CURRENT_BINARY_DIR}/Doxyfile")
    configure_file("${DOXYGEN_IN}" "${DOXYGEN_OUT}" @ONLY)
    message("Doxygen build started")
    add_custom_target(Doxygen ALL
            COMMAND "${DOXYGEN_EXECUTABLE}" "${DOXYGEN_OUT}"
            WORKING_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}"
            COMMENT "Generating API documentation with Doxygen"
            VERBATIM)
else(DOXYGEN_FOUND)
    message("Doxygen needs to be installed to generate the documentation.")
endif(DOXYGEN_FOUND)